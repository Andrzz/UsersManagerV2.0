@model UserManager.Models.UserViewModel
@using UserManager.Models.GenderEnum

@{
    ViewData["Title"] = Model.UserId == 0 ? "Create User" : "Edit User";
}

<h1>@ViewData["Title"]</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="AddOrEdit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="UserId" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BirthDate" class="control-label"></label>
                <input asp-for="BirthDate" class="form-control" type="date" min="1990-01-01"/>
                <span asp-validation-for="BirthDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Gender" class="control-label"></label>
                @Html.DropDownListFor(m => m.Gender,
                                           new SelectList(Enum.GetValues(typeof(Gender))),
                                           "--Select Gender--",
                                           new { @class = "form-control" })
                <span asp-validation-for="Gender" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Submit" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
